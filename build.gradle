apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'pmd'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.10'
    }
}

sourceSets {
    integration {
        java.srcDir 'src/integration-test/java'
        resources.srcDir 'src/integration-test/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

project.ext {
    dropwizardVersion = '1.0.2'
}

repositories {
    mavenCentral()
}

dependencies {
    compile (
        'io.dropwizard:dropwizard-core:' + dropwizardVersion,
        'io.dropwizard:dropwizard-jdbi:' + dropwizardVersion,
        'io.dropwizard:dropwizard-migrations:' + dropwizardVersion,
        'postgresql:postgresql:9.1-901-1.jdbc4'
    )
    testCompile (
        'io.dropwizard:dropwizard-testing:' + dropwizardVersion,
        'com.h2database:h2:1.4.181'
    )
    integrationCompile (
        'com.jayway.restassured:rest-assured:2.9.0'
    )
}

pmd {
    ignoreFailures = false
    consoleOutput = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
}

test {
    testLogging {
        exceptionFormat 'full'
        events "passed", "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "Tests run: ${result.testCount}, Failures: ${result.failedTestCount}, Skipped: ${result.skippedTestCount}"
            }
        }
    }
}

task integration(type: Test) {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath
    testLogging {
        exceptionFormat 'full'
        events "passed", "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "Tests run: ${result.testCount}, Failures: ${result.failedTestCount}, Skipped: ${result.skippedTestCount}"
            }
        }
    }
}

run {
    args 'server', './config.yml'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}

shadowJar {
    mergeServiceFiles()
    mainClassName = 'demo.DemoServiceApp'
    baseName = 'demo-service'
    classifier = 'fat'
}

artifactory {
    contextUrl = artifactoryUrl
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = artifactoryUser
            password = artifactoryPassword
        }
        defaults {
            publications ('mavenJava')
        }
    }
    resolve {
        repoKey = 'jcenter'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'demo'
            artifactId 'demo-service'
            version currentVersion
            from components.java
            artifact shadowJar
        }
    }
}
